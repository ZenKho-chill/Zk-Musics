import {
  Message,
  PartialMessage,
  MessageReaction,
  PartialMessageReaction,
  User,
  PartialUser,
  TextChannel,
  NewsChannel,
  EmbedBuilder,
} from "discord.js";
import { isEventEnabled, getModLogChannel } from "../ModLogEventUtils.js";
import { Manager } from "../../manager.js";

export class ReactionEventsHandler {
  private client: Manager;

  constructor(client: Manager) {
    this.client = client;
    this.init();
  }

  private init() {
    this.client.on(
      "messageReactionAdd",
      this.handleMessageReactionAdd.bind(this)
    );
    this.client.on(
      "messageReactionRemove",
      this.handleMessageReactionRemove.bind(this)
    );
    this.client.on(
      "messageReactionRemoveAll",
      this.handleMessageReactionRemoveAll.bind(this)
    ); // S·ª± ki·ªán ƒë√∫ng
  }

  // X·ª≠ l√Ω khi c√≥ ph·∫£n ·ª©ng ƒë∆∞·ª£c th√™m
  private async handleMessageReactionAdd(
    reaction: MessageReaction | PartialMessageReaction,
    user: User | PartialUser
  ) {
    if (!reaction.message.guild || !user) return;
    const guildId = reaction.message.guild.id;

    if (!(await isEventEnabled(guildId, "messageReactionAdd", this.client.db)))
      return;

    if (reaction.partial) {
      try {
        await reaction.fetch();
      } catch (error) {
        console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c reaction:", error);
        return;
      }
    }

    if (user.partial) {
      try {
        await user.fetch();
      } catch (error) {
        console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c user:", error);
        return;
      }
    }

    const channel = await getModLogChannel(guildId, this.client);
    if (!channel) return;

    await channel.send({
      embeds: [
        new EmbedBuilder()
          .setAuthor({
            name: user.username,
            iconURL: user.avatarURL(),
          })
          .setColor(0x00ff00)
          .setTitle("üëç ƒê√£ th√™m ph·∫£n ·ª©ng")
          .setDescription(
            `**Ng∆∞·ªùi d√πng:** <@${user.id}> ƒë√£ th√™m ph·∫£n ·ª©ng v√†o [tin nh·∫Øn n√†y](https://discord.com/channels/${guildId}/${reaction.message.channelId}/${reaction.message.id})`
          )
          .addFields(
            { name: "Ph·∫£n ·ª©ng", value: `${reaction.emoji.name}`, inline: true },
            {
              name: "K√™nh",
              value: `<#${reaction.message.channelId}>`,
              inline: true,
            }
          )
          .setFooter({
            text:
              this.client.user?.username || this.client.user?.tag || "Kh√¥ng r√µ",
            iconURL: this.client.user.displayAvatarURL(),
          })
          .setTimestamp(new Date()),
      ],
    });
  }

  // X·ª≠ l√Ω khi ph·∫£n ·ª©ng b·ªã g·ª°
  private async handleMessageReactionRemove(
    reaction: MessageReaction | PartialMessageReaction,
    user: User | PartialUser
  ) {
    if (!reaction.message.guild || !user) return;
    const guildId = reaction.message.guild.id;

    if (
      !(await isEventEnabled(guildId, "messageReactionRemove", this.client.db))
    )
      return;

    if (reaction.partial) {
      try {
        await reaction.fetch();
      } catch (error) {
        console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c reaction:", error);
        return;
      }
    }

    if (user.partial) {
      try {
        await user.fetch();
      } catch (error) {
        console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c user:", error);
        return;
      }
    }

    const channel = await getModLogChannel(guildId, this.client);
    if (!channel) return;

    await channel.send({
      embeds: [
        new EmbedBuilder()
          .setAuthor({
            name: user.username,
            iconURL: user.displayAvatarURL(),
          })
          .setColor(0xff0000)
          .setTitle("üëé Ph·∫£n ·ª©ng ƒë√£ b·ªã g·ª°")
          .setDescription(
            `**Ng∆∞·ªùi d√πng:** <@${user.id}> ƒë√£ g·ª° ph·∫£n ·ª©ng kh·ªèi [tin nh·∫Øn n√†y](https://discord.com/channels/${guildId}/${reaction.message.channelId}/${reaction.message.id})`
          )
          .addFields(
            { name: "Ph·∫£n ·ª©ng", value: `${reaction.emoji.name}`, inline: true },
            {
              name: "K√™nh",
              value: `<#${reaction.message.channelId}>`,
              inline: true,
            }
          )
          .setFooter({
            text:
              this.client.user?.username || this.client.user?.tag || "Kh√¥ng r√µ",
            iconURL: this.client.user.displayAvatarURL(),
          })
          .setTimestamp(new Date()),
      ],
    });
  }

  // X·ª≠ l√Ω khi t·∫•t c·∫£ ph·∫£n ·ª©ng tr√™n 1 tin nh·∫Øn b·ªã g·ª°
  private async handleMessageReactionRemoveAll(
    message: Message<boolean> | PartialMessage
  ) {
    if (!message.guild) return;
    const guildId = message.guild.id;

    if (
      !(await isEventEnabled(
        guildId,
        "messageReactionRemoveAll",
        this.client.db
      ))
    )
      return;

    const channel = await getModLogChannel(guildId, this.client);
    if (!channel) return;

    await channel.send({
      embeds: [
        new EmbedBuilder()
          .setAuthor({
            name: message.author.username,
            iconURL: message.author.displayAvatarURL(),
          })
          .setColor(0xffa500)
          .setTitle("üö´ T·∫•t c·∫£ ph·∫£n ·ª©ng ƒë√£ b·ªã g·ª°")
          .setDescription(
            `T·∫•t c·∫£ ph·∫£n ·ª©ng ƒë√£ b·ªã g·ª° kh·ªèi [tin nh·∫Øn n√†y](https://discord.com/channels/${guildId}/${message.channelId}/${message.id})`
          )
          .addFields({
            name: "K√™nh",
            value: `<#${message.channelId}>`,
            inline: true,
          })
          .setFooter({
            text:
              this.client.user?.username || this.client.user?.tag || "Kh√¥ng r√µ",
            iconURL: this.client.user.displayAvatarURL(),
          })
          .setTimestamp(new Date()),
      ],
    });
  }
}
